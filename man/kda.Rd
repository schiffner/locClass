% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kda.R
\encoding{latin1}
\name{kda}
\alias{kda}
\alias{kda.data.frame}
\alias{kda.default}
\alias{kda.formula}
\alias{kda.matrix}
\title{Kernel Classification Rules}
\usage{
kda(x, ...)

\method{kda}{formula}(formula, data, ..., subset, na.action)

\method{kda}{data.frame}(x, ...)

\method{kda}{matrix}(x, grouping, ..., subset, na.action = na.fail)

\method{kda}{default}(x, grouping, wf = c("biweight", "cauchy", "cosine",
  "epanechnikov", "exponential", "gaussian", "optcosine", "rectangular",
  "triangular"), bw, k, nn.only = TRUE, ...)
}
\arguments{
\item{x}{(Required if no \code{formula} is given as principal argument.) A \code{matrix} or \code{data.frame} or \code{Matrix} containing the explanatory variables.}

\item{formula}{A formula of the form \code{groups ~ x1 + x2 + \dots}, that is, the response
is the grouping \code{factor} and the right hand side specifies the (usually non-\code{factor})
discriminators.}

\item{data}{A \code{data.frame} from which variables specified in \code{formula} are to be taken.}

\item{subset}{An index vector specifying the cases to be used in the training sample. (NOTE: If given, this argument must be named.)}

\item{na.action}{A function to specify the action to be taken if NAs are found. The default action is first
the \code{na.action} setting of \code{\link{options}} and second \code{\link{na.fail}} if that is unset. 
An alternative is \code{\link{na.omit}}, which leads to rejection of cases with missing values on any required 
variable. (NOTE: If given, this argument must be named.)}

\item{grouping}{(Required if no \code{formula} is given as principal argument.) A \code{factor} specifying
the class membership for each observation.}

\item{wf}{A window function which is used to calculate weights that are introduced into 
the fitting process. Either a character string or a function, e.g. \code{wf = function(x) exp(-x)}.
For details see the documentation for \code{\link[=biweight]{wfs}}.}

\item{bw}{(Required only if \code{wf} is a string.) The bandwidth parameter of the window function. (See \code{\link[=biweight]{wfs}}.)}

\item{k}{(Required only if \code{wf} is a string.) The number of nearest neighbors of the decision boundary to be used in the fitting process. (See \code{\link[=biweight]{wfs}}.)}

\item{nn.only}{(Required only if \code{wf} is a string indicating a window function with infinite support and if \code{k} is specified.) Should
only the \code{k} nearest neighbors or all observations receive positive weights? (See \code{\link[=biweight]{wfs}}.)}

\item{\dots}{Further arguments. Currently unused.}
}
\value{
An object of class \code{"kda"}, a \code{list} containing the following components:
 \item{x}{A \code{matrix} containing the explanatory variables.}
 \item{grouping}{A \code{factor} specifying the class membership for each observation.}
 \item{counts}{The number of observations per class.}
 \item{lev}{The class labels (levels of \code{grouping}).}  
 \item{N}{The number of observations.}
 \item{wf}{The window function used. Always a function, even if the input was a string.}
 \item{bw}{(Only if \code{wf} is a string or was generated by means of one of the functions documented in \code{\link[=biweight]{wfs}}.) 
  The bandwidth used, \code{NULL} if \code{bw} was not specified.}
\item{k}{(Only if \code{wf} is a string or was generated by means of one of the functions documented in \code{\link[=biweight]{wfs}}.) 
  The number of nearest neighbors used, \code{NULL} if \code{k} was not specified.}
 \item{nn.only}{(Logical. Only if \code{wf} is a string or was generated by means of one of the functions documented in \code{\link[=biweight]{wfs}} and if \code{k} was
 specified.) \code{TRUE} if only the \code{k} nearest neighbors recieve a positive weight, \code{FALSE} otherwise.}
 \item{adaptive}{(Logical.) \code{TRUE} if the bandwidth of \code{wf} is adaptive to the local density of data points, \code{FALSE} if the bandwidth
  is fixed.}
 \item{variant}{(Only if \code{wf} is a string or if one of the weight functions documented in \code{\link[=biweight]{wfs}} is used, for internal use only). 
  An integer indicating which weighting scheme is implied by \code{bw}, \code{k} and \code{nn.only}.}
 \item{call}{The (matched) function call.}
}
\description{
Classification using the moving window and kernel classification rules.
}
\details{
The kernel clasification rule is given as
\deqn{\hat g = \arg\max_g \sum_{n:y_n=g} wf\left(\frac{x-x_n}{bw}\right).}{hat g = arg max_g sum_{n:y_n=g} wf((x-x_n)/bw).}
In the case that wf is the rectangular kernel it is also called moving window rule.

The name of the window function (\code{wf}) can be specified as a character string.
In this case the window function is generated internally in \code{predict.kda}. Currently
supported are \code{"biweight"}, \code{"cauchy"}, \code{"cosine"}, \code{"epanechnikov"}, 
\code{"exponential"}, \code{"gaussian"}, \code{"optcosine"}, \code{"rectangular"} and 
\code{"triangular"}.

Moreover, it is possible to generate the window functions mentioned above in advance 
(see \code{\link[=biweight]{wfs}}) and pass them to \code{kda}.

Any other function implementing a window function can also be used as \code{wf} argument.
This allows the user to try own window functions.
See help on \code{\link[=biweight]{wfs}} for details.

If the predictor variables include factors, the formula interface must be used in order 
to get a correct model matrix.
}
\examples{
fit <- kda(Species ~ Sepal.Length + Sepal.Width, data = iris,
    wf = "gaussian", bw = 0.5)
pred <- predict(fit)
mean(pred$class != iris$Species)

}
\references{
Devroye, L., Gyoerfi, L. and Lugosi, A. (1996), A Probabilistic Theory of Pattern Recognition. 
Springer, New York.
}
\seealso{
\code{\link{predict.kda}}.

Other observation_specific majority: \code{\link{predict.kda}}
}
\keyword{classif}
\keyword{multivariate}

